local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local localPlayer = Players.LocalPlayer
local camera = workspace.CurrentCamera
local camlockEnabled = false
local lockedTarget = nil
local targetList = {}
local currentTargetIndex = 1
local maxRange = 50
local smoothness = 0.9

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CamlockGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = localPlayer.PlayerGui

local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(0, 200, 0, 50)
statusLabel.Position = UDim2.new(0.5, -100, 0.75, -25)
statusLabel.BackgroundTransparency = 1
statusLabel.TextColor3 = Color3.new(1, 1, 1)
statusLabel.TextStrokeTransparency = 0
statusLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
statusLabel.TextSize = 24
statusLabel.Font = Enum.Font.SourceSansBold
statusLabel.Text = "Camlock: OFF"
statusLabel.Parent = screenGui

local function updateTargetList()
    targetList = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (localPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if distance <= maxRange then table.insert(targetList, player) end
        end
    end
    table.sort(targetList, function(a, b)
        return (localPlayer.Character.HumanoidRootPart.Position - a.Character.HumanoidRootPart.Position).Magnitude < 
               (localPlayer.Character.HumanoidRootPart.Position - b.Character.HumanoidRootPart.Position).Magnitude
    end)
end

local function toggleCamlock()
    camlockEnabled = not camlockEnabled
    if camlockEnabled then
        updateTargetList()
        if #targetList > 0 then
            lockedTarget = targetList[1]
            statusLabel.Text = "Camlock: " .. lockedTarget.Name
        end
    else
        lockedTarget = nil
        targetList = {}
        currentTargetIndex = 1
        statusLabel.Text = "Camlock: OFF"
    end
end

local function switchTarget()
    if #targetList > 0 then
        currentTargetIndex = currentTargetIndex % #targetList + 1
        lockedTarget = targetList[currentTargetIndex]
        statusLabel.Text = "Camlock: " .. lockedTarget.Name
    end
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.Y then toggleCamlock()
    elseif input.KeyCode == Enum.KeyCode.T and camlockEnabled then switchTarget() end
end)

RunService.RenderStepped:Connect(function()
    if camlockEnabled and lockedTarget then
        if not lockedTarget.Character or 
           not lockedTarget.Character:FindFirstChild("HumanoidRootPart") or 
           (lockedTarget.Character:FindFirstChild("Humanoid") and lockedTarget.Character.Humanoid.Health <= 0) then
            updateTargetList()
            if #targetList > 0 then
                lockedTarget = targetList[1]
                currentTargetIndex = 1
                statusLabel.Text = "Camlock: " .. lockedTarget.Name
            else
                toggleCamlock()
            end
            return
        end
        camera.CFrame = camera.CFrame:Lerp(
            CFrame.new(camera.CFrame.Position, lockedTarget.Character.HumanoidRootPart.Position),
            smoothness
        )
    end
end)
